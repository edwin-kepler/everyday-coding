		.data
		.align	2
jtable:	.word	top, case1, case2, case3
prompt:	.asciiz	"\n Input a value from 1 to 3: "
		.text
main:							# without main spim is getting rude
top:
		li		$v0, 4			# code to print a string
		la		$a0, prompt
		syscall

		li		$v0, 5			# code to read an integer
		syscall

		li		$s0, 10			# populate s0 with 10 to see some results in case switch
		blez	$v0, top		# default for less then one

		li		$t3, 3
		bgt		$v0, $t3, top	# default for greater then 3

		la		$a1, jtable		# load address of jumptable
		sll		$t0, $v0, 2		# compute word offset
		add		$t1, $a1, $t0	# form a pointer to jtable
		lw		$t2, 0($t1)		# load an address from jtable
		jr		$t2				# jump to specific case "switch"

case1:
		sll		$s0, $s0, 1		# shift left logical one bit
		b		output

case2:
		sll		$s0, $s0, 2
		b		output

case3:
		sll		$s0, $s0, 3

output:
		li		$v0, 1 			# code to print integer
		move	$a0, $s0		# pass argument to system in $a0
		syscall

exit:							# spim doesn't like when program is not terminated properly
		li		$v0, 10			# syscall 10 terminates program
		syscall					# and exits
